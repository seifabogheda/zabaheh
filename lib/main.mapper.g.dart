// This file has been generated by the dart_json_mapper package.
// https://github.com/k-paxian/dart-json-mapper
// @dart = 2.12
import 'package:base_flutter/general/models/QuestionModel.dart' as x0 show QuestionModel;
import 'package:base_flutter/general/models/UserModel.dart' as x1 show UserModel;
import 'package:dart_json_mapper/dart_json_mapper.dart' show JsonMapper, JsonMapperAdapter, typeOf;

// ignore_for_file: invalid_language_version_override
// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
// @dart = 2.9

import 'dart:core';
import 'package:base_flutter/general/models/QuestionModel.dart' as prefix2;
import 'package:base_flutter/general/models/UserModel.dart' as prefix1;
import 'package:dart_json_mapper/src/model/annotations.dart' as prefix0;

// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: implementation_imports

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{const prefix0.JsonSerializable(): r.ReflectorData(<m.TypeMirror>[r.NonGenericClassMirrorImpl(r'UserModel', r'.UserModel', 7, 0, const prefix0.JsonSerializable(), const <int>[0, 1, 2, 3, 4, 8, 19, 20], const <int>[21, 22, 23, 24, 25, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], const <int>[], -1, {}, {}, {r'': (bool b) => ({userName, id, token, lang}) => b ? prefix1.UserModel(id: id, lang: lang, token: token, userName: userName) : null, r'fromJson': (bool b) => (json) => b ? prefix1.UserModel.fromJson(json) : null}, -1, 0, const <int>[], const [prefix0.jsonSerializable], null), r.NonGenericClassMirrorImpl(r'QuestionModel', r'.QuestionModel', 7, 1, const prefix0.JsonSerializable(), const <int>[5, 6, 7, 26, 33, 34], const <int>[21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], const <int>[], -1, {}, {}, {r'': (bool b) => ({question, answer}) => b ? prefix2.QuestionModel(answer: answer, question: question) : null, r'fromJson': (bool b) => (json) => b ? prefix2.QuestionModel.fromJson(json) : null}, -1, 1, const <int>[], const [prefix0.jsonSerializable], null)], <m.DeclarationMirror>[r.VariableMirrorImpl(r'userName', 32773, 0, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [const prefix0.JsonProperty(name: "userName")]), r.VariableMirrorImpl(r'id', 32773, 0, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [const prefix0.JsonProperty(name: "id")]), r.VariableMirrorImpl(r'token', 32773, 0, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [const prefix0.JsonProperty(name: "token")]), r.VariableMirrorImpl(r'lang', 32773, 0, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [const prefix0.JsonProperty(name: "lang")]), r.VariableMirrorImpl(r'type', 32773, 0, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [const prefix0.JsonProperty(name: "type")]), r.VariableMirrorImpl(r'question', 32773, 1, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [const prefix0.JsonProperty(name: "question")]), r.VariableMirrorImpl(r'answer', 32773, 1, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [const prefix0.JsonProperty(name: "answer")]), r.VariableMirrorImpl(r'closed', 32773, 1, const prefix0.JsonSerializable(), -1, 3, 3, const <int>[], const [const prefix0.JsonProperty(defaultValue: true)]), r.MethodMirrorImpl(r'toJson', 4325378, 0, -1, 4, 5, null, const <int>[], const prefix0.JsonSerializable(), const []), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 0, 9), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 0, 10), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 1, 11), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 1, 12), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 2, 13), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 2, 14), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 3, 15), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 3, 16), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 4, 17), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 4, 18), r.MethodMirrorImpl(r'', 0, 0, -1, 0, 0, const <int>[], const <int>[0, 1, 2, 3], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'fromJson', 1, 0, -1, 0, 0, const <int>[], const <int>[4], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'==', 131074, -1, -1, 6, 6, const <int>[], const <int>[10], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'toString', 131074, -1, -1, 7, 7, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'noSuchMethod', 65538, -1, -1, -1, -1, const <int>[], const <int>[11], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'hashCode', 131075, -1, -1, 8, 8, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'runtimeType', 131075, -1, -1, 9, 9, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'toJson', 4325378, 1, -1, 4, 5, null, const <int>[], const prefix0.JsonSerializable(), const []), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 5, 27), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 5, 28), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 6, 29), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 6, 30), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 7, 31), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 7, 32), r.MethodMirrorImpl(r'', 0, 1, -1, 1, 1, const <int>[], const <int>[12, 13], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'fromJson', 1, 1, -1, 1, 1, const <int>[], const <int>[14], const prefix0.JsonSerializable(), const [])], <m.ParameterMirror>[r.ParameterMirrorImpl(r'userName', 45062, 19, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, #userName), r.ParameterMirrorImpl(r'id', 45062, 19, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, #id), r.ParameterMirrorImpl(r'token', 45062, 19, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, #token), r.ParameterMirrorImpl(r'lang', 45062, 19, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, #lang), r.ParameterMirrorImpl(r'json', 2129926, 20, const prefix0.JsonSerializable(), -1, 4, 5, null, const [], null, null), r.ParameterMirrorImpl(r'_userName', 32870, 10, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_id', 32870, 12, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_token', 32870, 14, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_lang', 32870, 16, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_type', 32870, 18, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'other', 32774, 21, const prefix0.JsonSerializable(), -1, 10, 10, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'invocation', 32774, 23, const prefix0.JsonSerializable(), -1, 11, 11, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'question', 45062, 33, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, #question), r.ParameterMirrorImpl(r'answer', 45062, 33, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, #answer), r.ParameterMirrorImpl(r'json', 2129926, 34, const prefix0.JsonSerializable(), -1, 4, 5, null, const [], null, null), r.ParameterMirrorImpl(r'_question', 32870, 28, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_answer', 32870, 30, const prefix0.JsonSerializable(), -1, 2, 2, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_closed', 32870, 32, const prefix0.JsonSerializable(), -1, 3, 3, const <int>[], const [], null, null)], <Type>[prefix1.UserModel, prefix2.QuestionModel, String, bool, const m.TypeValue<Map<String, dynamic>>().type, Map, bool, String, int, Type, Object, Invocation], 2, {r'==': (dynamic instance) => (x) => instance == x, r'toString': (dynamic instance) => instance.toString, r'noSuchMethod': (dynamic instance) => instance.noSuchMethod, r'hashCode': (dynamic instance) => instance.hashCode, r'runtimeType': (dynamic instance) => instance.runtimeType, r'toJson': (dynamic instance) => instance.toJson, r'userName': (dynamic instance) => instance.userName, r'id': (dynamic instance) => instance.id, r'token': (dynamic instance) => instance.token, r'lang': (dynamic instance) => instance.lang, r'type': (dynamic instance) => instance.type, r'question': (dynamic instance) => instance.question, r'answer': (dynamic instance) => instance.answer, r'closed': (dynamic instance) => instance.closed}, {r'userName=': (dynamic instance, value) => instance.userName = value, r'id=': (dynamic instance, value) => instance.id = value, r'token=': (dynamic instance, value) => instance.token = value, r'lang=': (dynamic instance, value) => instance.lang = value, r'type=': (dynamic instance, value) => instance.type = value, r'question=': (dynamic instance, value) => instance.question = value, r'answer=': (dynamic instance, value) => instance.answer = value, r'closed=': (dynamic instance, value) => instance.closed = value}, null, [])};


final _memberSymbolMap = null;

void _initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}

final mainAdapter = JsonMapperAdapter(
  title: 'mainAdapter',
  url: 'package:base_flutter/main.dart',
  valueDecorators: {
    typeOf<List<x0.QuestionModel>>(): (value) => value.cast<x0.QuestionModel>(),
    typeOf<Set<x0.QuestionModel>>(): (value) => value.cast<x0.QuestionModel>(),
    typeOf<List<x1.UserModel>>(): (value) => value.cast<x1.UserModel>(),
    typeOf<Set<x1.UserModel>>(): (value) => value.cast<x1.UserModel>()
},
  enumValues: {

});

Future<JsonMapper> initializeJsonMapperAsync({Iterable<JsonMapperAdapter> adapters = const []}) => Future(() => initializeJsonMapper(adapters: adapters));

JsonMapper initializeJsonMapper({Iterable<JsonMapperAdapter> adapters = const []}) {
  _initializeReflectable();
  [...adapters, mainAdapter].forEach((x) => JsonMapper().useAdapter(x));
  return JsonMapper();
}